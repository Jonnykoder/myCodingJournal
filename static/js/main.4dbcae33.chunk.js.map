{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setDate","setInputText","todos","setTodos","inputText","inputDate","useState","Date","now","id","setId","htmlFor","className","type","value","onChange","e","target","console","log","name","required","onClick","alert","window","confirm","preventDefault","date","text","completed","Todo","todo","map","item","filter","el","TodoList","filteredTodos","setStatus","App","status","setFilteredTodos","useEffect","getLocalTasks","filterHandler","saveLocalTasks","localStorage","setItem","JSON","stringify","getItem","data","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4dbcae33.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\n\r\n const Form = ({setDate, setInputText, todos, setTodos , inputText ,inputDate }) => {\r\n    \r\n    //Function for Inputting text\r\n    const inputTextHandler =(e) => {\r\n        setInputText(e.target.value);\r\n    };\r\n\r\n    const [id, setId] = useState(Date.now()); //WIll make an ID\r\n    \r\n\r\n    const dateHandler = (e) =>{\r\n        setDate(e.target.value);\r\n        console.log(e.target.value)\r\n    }\r\n\r\n    //Function for Submitting to the useState\r\n    const submitTodoHandler =(e) =>{\r\n        if (inputDate === \"\"){\r\n            alert(\"Please type the date of the task first.\");\r\n            return false\r\n        }\r\n        \r\n        else if(inputText ===\"\"){\r\n            alert(\"missing task\");\r\n          \r\n        }else{\r\n            \r\n            var answer = window.confirm(\"Save data?\");\r\n            if (answer) {\r\n               \r\n                setId(Date.now());\r\n                e.preventDefault(); // Will prevent default\r\n                setTodos([\r\n                    ...todos , {date:inputDate, text: inputText,  completed: false , id:id}\r\n                ]);\r\n                console.log(\"Operation saved.\")\r\n                setInputText(\"\");\r\n                setDate(\"\");\r\n                \r\n            }\r\n            else {\r\n               console.log(\"Operation Cancelled.\")\r\n            }\r\n             \r\n            \r\n          \r\n        }\r\n      \r\n      \r\n    };\r\n  \r\n    return (\r\n        <div>\r\n             <form>\r\n                <label htmlFor=\"Date\" className=\"task-label\"> DATE:</label>\r\n                <input type=\"datetime-local\" value={inputDate} onChange={dateHandler} name=\"Date\" required/>\r\n                <label htmlFor=\"inputTask\" className=\"task-label\">TASK: </label><br />\r\n                <input onChange={inputTextHandler} value={inputText} type=\"text\" className=\"todo-input\" name=\"inputTask\"  />\r\n                <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\r\n                    <i className=\"fas fa-plus-square\"></i>\r\n                </button> \r\n               \r\n              \r\n            </form>\r\n           \r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form","import React from 'react'\r\n\r\n const Todo = ({date,text,todo ,todos, setTodos}) => {\r\n\r\n\r\n    // Events\r\n    const deleteHandler =() =>{\r\n        var answer = window.confirm(\"Delete this task?\");\r\n        if (answer) {\r\n            setTodos(todos.filter((el) => el.id !==todo.id) )\r\n        }else{\r\n\r\n        }\r\n       \r\n       \r\n    }\r\n  \r\nconst completeHandler  = () =>{\r\n    setTodos(todos.map(item => {\r\n        if(item.id === todo.id){\r\n            return{\r\n                ...item, completed: !item.completed\r\n               \r\n            }\r\n        }\r\n        return item;\r\n        \r\n    })\r\n    );\r\n\r\n};\r\n\r\n    return (\r\n        <div className=\"todo\">\r\n            <li className={`todo-date ${todo.completed  ? \"completed\" :\" \" }`} id=\"date-label\">Date: {date}</li>\r\n            <li className={`todo-item ${todo.completed  ? \"completed\" :\" \"}`}>Task: {text}</li>\r\n            <button onClick={completeHandler} className=\"complete-btn\" > \r\n                <i className=\"fas fa-check\"></i>\r\n            </button>\r\n            <button onClick={deleteHandler} className=\"trash-btn\" > \r\n                <i className=\"fas fa-trash\"></i>\r\n            </button> \r\n    \r\n        </div>\r\n       \r\n    )\r\n}\r\n\r\nexport default Todo;","import React from 'react'\r\n\r\n\r\n// import these components\r\nimport Todo from './Todo'\r\n const TodoList = ({  todos,setTodos , filteredTodos ,setStatus }) => {\r\n  \r\n\r\n     //Function for status filter\r\n     const statusHandler =(e) => {\r\n        setStatus(e.target.value);\r\n        }\r\n    return (\r\n        <>\r\n                <form >\r\n                    <div className=\"select\">\r\n                        <label   htmlFor=\"todos\" className=\"task-label\">VIEW TASK BY:</label>\r\n                        <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n                        <option value=\"all\">All</option>\r\n                        <option value=\"completed\">Completed</option>\r\n                        <option value=\"uncompleted\">Uncompleted</option>\r\n                        </select>\r\n                    </div>\r\n                </form>\r\n           \r\n\r\n        <div>\r\n             <div className=\"todo-container\">\r\n                <ul className=\"todo-list\">\r\n                   {filteredTodos.map(todo=> (\r\n                     <Todo \r\n                        date={todo.date}\r\n                        setTodos={setTodos} \r\n                        todos={todos} \r\n                        key={todo.id}\r\n                        todo={todo}\r\n                        text={todo.text}\r\n                       />  \r\n                        \r\n                   ))}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n\r\n        </>\r\n      \r\n    )\r\n}\r\n\r\nexport default TodoList;","\n// import the CSS file\nimport { useState ,useEffect } from 'react';\nimport './App.css';\n\n//Import these components\nimport Form from './components/Form';\nimport TodoList from './components/TodoList';\n\n\nfunction App() {\n\n\n  //Declaring the variable fot state\nconst [inputText, setInputText] = useState(\"\");\nconst [inputDate, setDate] = useState(\"\");\nconst [todos , setTodos] = useState([]);\nconst [status ,setStatus] = useState(\"All\");\nconst [filteredTodos, setFilteredTodos] = useState([]);\n\n\n//Run only once when the page start \nuseEffect(() =>{\n  getLocalTasks();\n}, []);\n\n//Use Effect\nuseEffect(() => {\n    filterHandler();\n    saveLocalTasks();\n} , [todos,status]);\n\n//Function \n  const filterHandler =() =>{\n    switch(status){\n      case 'completed':\n        setFilteredTodos(todos.filter(todo => todo.completed ===true));\n        break;\n      case 'uncompleted':\n        setFilteredTodos(todos.filter(todo => todo.completed ===false));\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  };\n \nconst saveLocalTasks =() => {\n    localStorage.setItem(\"tasks\", JSON.stringify(todos)) // WIll save the data to local\n};\n\n\n\nconst getLocalTasks =() =>{\n  if(localStorage.getItem(\"tasks\") ===null){\n    localStorage.setItem(\"tasks\", JSON.stringify([]));\n  }\n  else{\n    let data = JSON.parse(localStorage.getItem(\"tasks\"));\n    setTodos(data);\n  }\n}\n\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Task Manager ni Eric </h1>  \n      </header>\n\n        <div  className=\"sectionHeading\">\n            <hr />\n            <h1>Add new Task</h1>\n        </div>\n       \n        <Form  // WIll be sent to Form component\n          inputDate={inputDate}\n          inputText={inputText} \n          todos={todos} \n          setDate={setDate}\n          setTodos={setTodos} \n          setInputText={setInputText}\n         \n          \n       \n          />\n\n        <hr/>\n        <div  className=\"sectionHeading\">\n          <h1>Task List</h1> \n        </div>\n         \n      \n        <TodoList   filteredTodos={filteredTodos} setTodos={setTodos} todos={todos}  setStatus ={setStatus}   />\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}